# ABOUTME: Nginx reverse proxy configuration for VibeVoice-FastAPI
# ABOUTME: Includes WebSocket proxying, SSL termination, rate limiting, and load balancing

# Main nginx configuration
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Worker connections and file limits
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 10M;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=tts:10m rate=2r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    
    # Upstream backend servers
    upstream vibevoice_backend {
        server vibevoice-api:8000;
        # Add more servers for load balancing
        # server vibevoice-api-2:8000;
        # server vibevoice-api-3:8000;
        
        # Health checks (nginx plus only)
        # health_check;
        
        # Load balancing method
        least_conn;
        
        # Keep connections alive
        keepalive 32;
    }

    # HTTP to HTTPS redirect (when using SSL)
    server {
        listen 80;
        server_name _;
        
        # Health check endpoint for load balancers
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Redirect all HTTP traffic to HTTPS
        # Uncomment when SSL is configured
        # return 301 https://$host$request_uri;
        
        # For development/testing without SSL, proxy directly
        location / {
            include /etc/nginx/conf.d/proxy_params.conf;
            proxy_pass http://vibevoice_backend;
        }
        
        location /api/voice/ {
            include /etc/nginx/conf.d/proxy_params.conf;
            include /etc/nginx/conf.d/rate_limit.conf;
            proxy_pass http://vibevoice_backend;
        }
        
        location /ws {
            include /etc/nginx/conf.d/websocket_params.conf;
            proxy_pass http://vibevoice_backend;
        }
    }

    # HTTPS server configuration
    server {
        listen 443 ssl http2;
        server_name your-domain.com;  # Replace with your domain
        
        # SSL configuration - customize with your certificates
        # ssl_certificate /etc/nginx/ssl/cert.pem;
        # ssl_certificate_key /etc/nginx/ssl/key.pem;
        # ssl_session_timeout 1d;
        # ssl_session_cache shared:SSL:50m;
        # ssl_session_tickets off;
        
        # Modern SSL configuration
        # ssl_protocols TLSv1.2 TLSv1.3;
        # ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        # ssl_prefer_server_ciphers off;
        
        # HSTS (optional)
        # add_header Strict-Transport-Security "max-age=63072000" always;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        
        # Connection and request limits
        limit_conn perip 10;
        
        # Main API routes
        location / {
            include /etc/nginx/conf.d/proxy_params.conf;
            limit_req zone=api burst=20 nodelay;
            proxy_pass http://vibevoice_backend;
        }
        
        # Health check (no rate limiting)
        location /health {
            include /etc/nginx/conf.d/proxy_params.conf;
            proxy_pass http://vibevoice_backend;
        }
        
        # TTS endpoints (stricter rate limiting)
        location /api/voice/ {
            include /etc/nginx/conf.d/proxy_params.conf;
            limit_req zone=tts burst=5 nodelay;
            proxy_pass http://vibevoice_backend;
            
            # Increase timeouts for TTS generation
            proxy_read_timeout 300s;
            proxy_send_timeout 300s;
        }
        
        # WebSocket support
        location /ws {
            include /etc/nginx/conf.d/websocket_params.conf;
            limit_req zone=api burst=10 nodelay;
            proxy_pass http://vibevoice_backend;
        }
        
        # Static files (if any)
        location /static/ {
            alias /app/static/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }
        
        # Deny access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # API documentation
        location /docs {
            include /etc/nginx/conf.d/proxy_params.conf;
            proxy_pass http://vibevoice_backend;
        }
        
        location /redoc {
            include /etc/nginx/conf.d/proxy_params.conf;
            proxy_pass http://vibevoice_backend;
        }
        
        location /openapi.json {
            include /etc/nginx/conf.d/proxy_params.conf;
            proxy_pass http://vibevoice_backend;
        }
    }
}