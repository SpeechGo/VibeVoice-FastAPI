# ABOUTME: Docker Compose configuration for VibeVoice-FastAPI with GPU support
# ABOUTME: Includes service definition, volume mounts, environment variables, and networking

version: '3.8'

services:
  vibevoice-api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILDKIT_INLINE_CACHE=1
    image: vibevoice-fastapi:latest
    container_name: vibevoice-api
    
    # GPU configuration
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    
    # Port mapping
    ports:
      - "8000:8000"
    
    # Environment variables
    environment:
      # Model configuration
      - MODEL_PATH=microsoft/VibeVoice-1.5B
      - VOICES_DIR=/app/voices
      
      # Performance tuning
      - MAX_CONCURRENCY=1
      - TIMEOUT_SEC=300
      
      # CORS configuration (customize as needed)
      - CORS_ALLOW_ORIGINS=http://localhost:3000,http://localhost:8080
      
      # Logging
      - LOG_LEVEL=info
      
      # CUDA configuration
      - CUDA_VISIBLE_DEVICES=0
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
      
      # HuggingFace configuration
      - HF_HOME=/app/model_cache
      - TRANSFORMERS_CACHE=/app/model_cache
      - TOKENIZERS_PARALLELISM=false
      
      # FastAPI configuration
      - UVICORN_HOST=0.0.0.0
      - UVICORN_PORT=8000
      - UVICORN_LOG_LEVEL=info
    
    # Volume mounts
    volumes:
      # Persistent voice files
      - ./voices:/app/voices:rw
      
      # Model cache (persistent across container restarts)
      - vibevoice_models:/app/model_cache:rw
      
      # Logs (optional - for debugging)
      - ./logs:/app/logs:rw
      
      # Configuration override (optional)
      - ./config:/app/config:ro
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 60s
    
    # Restart policy
    restart: unless-stopped
    
    # Resource limits
    mem_limit: 8g
    memswap_limit: 8g
    shm_size: 2g
    
    # Network configuration
    networks:
      - vibevoice_network

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: vibevoice-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deployment/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./deployment/ssl:/etc/nginx/ssl:ro  # SSL certificates (if using HTTPS)
    depends_on:
      vibevoice-api:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - vibevoice_network
    profiles:
      - with-nginx

  # Optional: Prometheus monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: vibevoice-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./deployment/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    restart: unless-stopped
    networks:
      - vibevoice_network
    profiles:
      - with-monitoring

# Named volumes
volumes:
  vibevoice_models:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./volumes/models

# Networks
networks:
  vibevoice_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16